layer {
  name: "data"
  type: "Python"
  top: "data"
  python_param {
    module: "CustomData"
    layer: "CustomData"
    param_str: "8,3,16,112,112"
  }
}
layer {
  name: "ground_truth"
  type: "Python"
  top: "ground_truth"
  python_param {
    module: "CustomData"
    layer: "CustomData"
    param_str: "8,1,16,112,112"
  }
}
# ----------- 1st layer group ---------------
layer {
  name: "conv1a"
  type: "Convolution3D"
  bottom: "data"
  top: "conv1a"
  param{
    lr_mult: 0
  }
  param{
    lr_mult: 0
  }
  convolution3d_param {
    num_output: 64
    kernel_size: 3
    kernel_depth: 3
    pad: 1
    temporal_pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling3D"
  bottom: "conv1a"
  top: "pool1"
  pooling3d_param {
    pool: MAX
    kernel_size: 2
    kernel_depth: 1
    stride: 2
    temporal_stride: 1
  }
}
# ------------- 2nd layer group --------------
layer {
  name: "conv2a"
  type: "Convolution3D"
  bottom: "pool1"
  top: "conv2a"
  param{
    lr_mult: 0
  }
  param{
    lr_mult: 0
  }
  
  
  
  convolution3d_param {
    num_output: 128
    kernel_size: 3
    kernel_depth: 3
    pad: 1
    temporal_pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling3D"
  bottom: "conv2a"
  top: "pool2"
  pooling3d_param {
    pool: MAX
    kernel_size: 2
    kernel_depth: 2
    stride: 2
    temporal_stride: 2
  }
}
# ----------------- 3rd layer group --------------
layer {
  name: "conv3a"
  type: "Convolution3D"
  bottom: "pool2"
  top: "conv3a"
  param{
    lr_mult: 0
  }
  param{
    lr_mult: 0
  }
  
  
  
  convolution3d_param {
    num_output: 256
    kernel_size: 3
    kernel_depth: 3
    pad: 1
    temporal_pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution3D"
  bottom: "conv3a"
  top: "conv3b"
  param{
    lr_mult: 0
  }
  param{
    lr_mult: 0
  }
  
  
  
  convolution3d_param {
    num_output: 256
    kernel_size: 3
    kernel_depth: 3
    pad: 1
    temporal_pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling3D"
  bottom: "conv3b"
  top: "pool3"
  pooling3d_param {
    pool: MAX
    kernel_size: 2
    kernel_depth: 2
    stride: 2
    temporal_stride: 2
  }
}

# --------- 4th layer group
layer {
  name: "conv4a"
  type: "Convolution3D"
  bottom: "pool3"
  top: "conv4a"
  param{
    lr_mult: 0
  }
  param{
    lr_mult: 0
  }
  
  
  
  convolution3d_param {
    num_output: 512
    kernel_size: 3
    kernel_depth: 3
    pad: 1
    temporal_pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution3D"
  bottom: "conv4a"
  top: "conv4b"
  param{
    lr_mult: 0
  }
  param{
    lr_mult: 0
  }
  
  
  
  convolution3d_param {
    num_output: 512
    kernel_size: 3
    kernel_depth: 3
    pad: 1
    temporal_pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling3D"
  bottom: "conv4b"
  top: "pool4"
  pooling3d_param {
    pool: MAX
    kernel_size: 2
    kernel_depth: 2
    stride: 2
    temporal_stride: 2
  }
}

# --------------- 5th layer group --------
layer {
  name: "conv5a"
  type: "Convolution3D"
  bottom: "pool4"
  top: "conv5a"
  param{
    lr_mult: 0
  }
  param{
    lr_mult: 0
  }
  
  
  
  convolution3d_param {
    num_output: 512
    kernel_size: 3
    kernel_depth: 3
    pad: 1
    temporal_pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}

# ---- upsampling layer ----
layer {
  name: "deconv5b"
  type: "Deconvolution3D"
  bottom: "conv5a"
  top: "deconv5b"
  
  param{
    lr_mult: 1
  }
  param{
    lr_mult: 2
  }
  
  
  convolution3d_param {
    num_output: 64
    kernel_size: 4
    kernel_depth: 4
    pad: 1
    temporal_pad: 1
    stride: 2
    temporal_stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  name: "relu5b-de"
  type: "ReLU"
  bottom: "deconv5b"
  top: "deconv5b"
}
layer {
  name: "deconv5b"
  type: "Dropout"
  bottom: "deconv5b"
  top: "deconv5b"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "predict4b"
  type: "Convolution3D"
  bottom: "conv4b"
  top: "predict4b"
  param{
    lr_mult: 1
  }
  param{
    lr_mult: 2
  }
  
  
  
  convolution3d_param {
    num_output: 64
    kernel_size: 3
    kernel_depth: 3
    pad: 1
    temporal_pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "concat1"
  type: "Concat"
  bottom: "deconv5b"
  bottom: "predict4b"
  top: "concat1"
  concat_param {
    concat_dim: 1
  }
}
layer {
  name: "deconv4b"
  type: "Deconvolution3D"
  bottom: "concat1"
  top: "deconv4b"
  param{
    lr_mult: 1
  }
  param{
    lr_mult: 2
  }
  
  
  
  convolution3d_param {
    num_output: 64
    kernel_size: 4
    kernel_depth: 4
    pad: 1
    temporal_pad: 1
    stride: 2
    temporal_stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4b-de"
  type: "ReLU"
  bottom: "deconv4b"
  top: "deconv4b"
}
layer {
  name: "deconv4b"
  type: "Dropout"
  bottom: "deconv4b"
  top: "deconv4b"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "predict3b"
  type: "Convolution3D"
  bottom: "conv3b"
  top: "predict3b"
  
  
  param{
    lr_mult: 1
  }
  param{
    lr_mult: 2
  }
  
  convolution3d_param {
    num_output: 64
    kernel_size: 3
    kernel_depth: 3
    pad: 1
    temporal_pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "concat2"
  type: "Concat"
  bottom: "deconv4b"
  bottom: "predict3b"
  top: "concat2"
  concat_param {
    concat_dim: 1
  }
}
layer {
  name: "deconv3b"
  type: "Deconvolution3D"
  bottom: "concat2"
  top: "deconv3b"
  
  param{
    lr_mult: 1
  }
  param{
    lr_mult: 2
  }
  
  
  convolution3d_param {
    num_output: 64
    kernel_size: 8
    kernel_depth: 4
    pad: 2
    temporal_pad: 1
    stride: 4
    temporal_stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3b-de"
  type: "ReLU"
  bottom: "deconv3b"
  top: "deconv3b"
}
layer {
  name: "deconv3b"
  type: "Dropout"
  bottom: "deconv3b"
  top: "deconv3b"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "predict"
  type: "Convolution3D"
  bottom: "deconv3b"
  top: "predict"
  
  param{
    lr_mult: 1
  }
  param{
    lr_mult: 2
  }
  
  
  convolution3d_param {
    num_output: 1
    kernel_size: 3
    kernel_depth: 3
    pad: 1
    temporal_pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "predict"
  bottom: "ground_truth"
  top: "loss"
}
